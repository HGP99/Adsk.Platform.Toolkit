// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.Issues.Models;
using Autodesk.ACC.Issues.Projects.Item.Issues.Item.Comments;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.Issues.Projects.Item.Issues.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \projects\{projectId}\issues\{issueId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithIssueItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The comments property</summary>
        public global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.Comments.CommentsRequestBuilder Comments
        {
            get => new global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.Comments.CommentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.WithIssueItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIssueItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issues/{issueId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.WithIssueItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIssueItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issues/{issueId}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves detailed information about a single issue. For general information about all the issues in a project, see `GET issues &lt;/en/docs/acc/v1/reference/http/issues-issues-GET&gt;`_.We support retrieving file-related (pushpin) issues. However, we do not currently support retrieving sheet-related issues from ACC Build Sheets tool... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Models.GetIssueDefinition"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Models.GetIssueDefinition?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Models.GetIssueDefinition> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Models.GetIssueDefinition>(requestInfo, global::Autodesk.ACC.Issues.Models.GetIssueDefinition.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates an issue.To verify whether a user can update issues for a specific project, call `GET users/me &lt;/en/docs/acc/v1/reference/http/me-GET&gt;`_.To verify which attributes the user can update, call `GET issues/:id &lt;/en/docs/acc/v1/reference/http/issues-issuesId-GET&gt;`_ and check the ``permittedAttributes`` and ``permittedStatuses`` lists.We support retrieving file-related (pushpin) issues. However, we do not currently support retrieving sheet-related issues from ACC Build Sheets tool... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Models.GetIssueDefinition"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Models.GetIssueDefinition?> PatchAsync(global::Autodesk.ACC.Issues.Models.UpdateIssueDefinition body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Models.GetIssueDefinition> PatchAsync(global::Autodesk.ACC.Issues.Models.UpdateIssueDefinition body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Models.GetIssueDefinition>(requestInfo, global::Autodesk.ACC.Issues.Models.GetIssueDefinition.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves detailed information about a single issue. For general information about all the issues in a project, see `GET issues &lt;/en/docs/acc/v1/reference/http/issues-issues-GET&gt;`_.We support retrieving file-related (pushpin) issues. However, we do not currently support retrieving sheet-related issues from ACC Build Sheets tool... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Updates an issue.To verify whether a user can update issues for a specific project, call `GET users/me &lt;/en/docs/acc/v1/reference/http/me-GET&gt;`_.To verify which attributes the user can update, call `GET issues/:id &lt;/en/docs/acc/v1/reference/http/issues-issuesId-GET&gt;`_ and check the ``permittedAttributes`` and ``permittedStatuses`` lists.We support retrieving file-related (pushpin) issues. However, we do not currently support retrieving sheet-related issues from ACC Build Sheets tool... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Autodesk.ACC.Issues.Models.UpdateIssueDefinition body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Autodesk.ACC.Issues.Models.UpdateIssueDefinition body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.WithIssueItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.WithIssueItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.Issues.Projects.Item.Issues.Item.WithIssueItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithIssueItemRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithIssueItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
