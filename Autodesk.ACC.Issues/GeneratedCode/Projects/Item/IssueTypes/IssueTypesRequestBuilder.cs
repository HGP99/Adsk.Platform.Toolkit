// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.Issues.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.Issues.Projects.Item.IssueTypes
{
    /// <summary>
    /// Builds and executes requests for operations under \projects\{projectId}\issue-types
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IssueTypesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssueTypesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issue-types{?filter%5BisActive%5D*,filter%5BupdatedAt%5D*,include*,limit*,offset*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssueTypesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issue-types{?filter%5BisActive%5D*,filter%5BupdatedAt%5D*,include*,limit*,offset*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves a project&apos;s categories and types. Note the following differences in terminology between the product and the API:.. list-table:: Terminology  :widths: 15 15  :header-rows: 1  * - Product Name    - API Name  * - Category    - Type  * - Type    - SubtypeNote that by default this endpoint does not return types (subtypes). To return types (subtypes), you need to add the ``include=subtypes`` query string parameter.Note that this endpoint does not return deleted items.This operation is available to everyone... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesGetResponse?> GetAsIssueTypesGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesGetResponse> GetAsIssueTypesGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "500", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesGetResponse>(requestInfo, global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves a project&apos;s categories and types. Note the following differences in terminology between the product and the API:.. list-table:: Terminology  :widths: 15 15  :header-rows: 1  * - Product Name    - API Name  * - Category    - Type  * - Type    - SubtypeNote that by default this endpoint does not return types (subtypes). To return types (subtypes), you need to add the ``include=subtypes`` query string parameter.Note that this endpoint does not return deleted items.This operation is available to everyone... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsIssueTypesGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "500", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesResponse>(requestInfo, global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves a project&apos;s categories and types. Note the following differences in terminology between the product and the API:.. list-table:: Terminology  :widths: 15 15  :header-rows: 1  * - Product Name    - API Name  * - Category    - Type  * - Type    - SubtypeNote that by default this endpoint does not return types (subtypes). To return types (subtypes), you need to add the ``include=subtypes`` query string parameter.Note that this endpoint does not return deleted items.This operation is available to everyone... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves a project&apos;s categories and types. Note the following differences in terminology between the product and the API:.. list-table:: Terminology  :widths: 15 15  :header-rows: 1  * - Product Name    - API Name  * - Category    - Type  * - Type    - SubtypeNote that by default this endpoint does not return types (subtypes). To return types (subtypes), you need to add the ``include=subtypes`` query string parameter.Note that this endpoint does not return deleted items.This operation is available to everyone... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class IssueTypesRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter types by status e.g. ``filter[isActive]=true`` will only return active types. Default value: ``undefined`` (meaning both active &amp; inactive issue type categories will return).</summary>
            [QueryParameter("filter%5BisActive%5D")]
            public bool? FilterisActive { get; set; }
            /// <summary>Retrieves types that were last updated at the specified date and time, in in one of the following URL-encoded formats: YYYY-MM-DDThh:mm:ss.sz or YYYY-MM-DD. Separate multiple values with commas. We support the following filtering options: - Date range: e.g., ``2022-03-02..2022-03-03`` or ``2022-02-28T22:00:00.000Z..2022-03-28T22:00:00.000Z``- Specific day: e.g., ``2022-03-02`` or ``2022-02-28T22:00:00.000Z``- Specific start date: e.g.,  ``2022-03-02..`` or ``2022-02-28T22:00:00.000Z..``- Specific end date: e.g., ``..2022-03-02`` or ``..2022-02-28T22:00:00.000Z``For more details, see `JSON API Filtering &lt;http://jsonapi.org/format/#fetching-filtering&gt;`_.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BupdatedAt%5D")]
            public string? FilterupdatedAt { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BupdatedAt%5D")]
            public string FilterupdatedAt { get; set; }
#endif
            /// <summary>Use ``include=subtypes`` to include the types (subtypes) for each category (type).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("include")]
            public string? Include { get; set; }
#nullable restore
#else
            [QueryParameter("include")]
            public string Include { get; set; }
#endif
            /// <summary>Add ``limit=20`` to limit the results count (together with the offset to support pagination).</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Add ``offset=20`` to get partial results (together with the limit to support pagination).</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class IssueTypesRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueTypes.IssueTypesRequestBuilder.IssueTypesRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
