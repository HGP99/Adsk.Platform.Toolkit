// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.Issues.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings
{
    /// <summary>
    /// Builds and executes requests for operations under \projects\{projectId}\issue-attribute-mappings
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IssueAttributeMappingsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssueAttributeMappingsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issue-attribute-mappings{?filter%5BattributeDefinitionId%5D*,filter%5BcreatedAt%5D*,filter%5BdeletedAt%5D*,filter%5BmappedItemId%5D*,filter%5BupdatedAt%5D*,limit*,offset*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssueAttributeMappingsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/projects/{projectId}/issue-attribute-mappings{?filter%5BattributeDefinitionId%5D*,filter%5BcreatedAt%5D*,filter%5BdeletedAt%5D*,filter%5BmappedItemId%5D*,filter%5BupdatedAt%5D*,limit*,offset*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves information about the issue custom attributes (custom fields) that are assigned to issue categories and issue types.We do not currently support adding custom fields to issues. For information about adding custom fields to issues categories and types, see the `help documentation &lt;https://help.autodesk.com/view/DOCS/ENU/?guid=Issues_Types_Categories&gt;`_.Note that by default, this endpoint only retrieves custom attributes that were directly assigned to the issue category or issue type. It does not retrieve inherited custom attributes... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsGetResponse?> GetAsIssueAttributeMappingsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsGetResponse> GetAsIssueAttributeMappingsGetResponseAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "500", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsGetResponse>(requestInfo, global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves information about the issue custom attributes (custom fields) that are assigned to issue categories and issue types.We do not currently support adding custom fields to issues. For information about adding custom fields to issues categories and types, see the `help documentation &lt;https://help.autodesk.com/view/DOCS/ENU/?guid=Issues_Types_Categories&gt;`_.Note that by default, this endpoint only retrieves custom attributes that were directly assigned to the issue category or issue type. It does not retrieve inherited custom attributes... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsIssueAttributeMappingsGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsResponse?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsResponse> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
                { "500", global::Autodesk.ACC.Issues.Models.ErrorResponseDefinition.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsResponse>(requestInfo, global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves information about the issue custom attributes (custom fields) that are assigned to issue categories and issue types.We do not currently support adding custom fields to issues. For information about adding custom fields to issues categories and types, see the `help documentation &lt;https://help.autodesk.com/view/DOCS/ENU/?guid=Issues_Types_Categories&gt;`_.Note that by default, this endpoint only retrieves custom attributes that were directly assigned to the issue category or issue type. It does not retrieve inherited custom attributes... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves information about the issue custom attributes (custom fields) that are assigned to issue categories and issue types.We do not currently support adding custom fields to issues. For information about adding custom fields to issues categories and types, see the `help documentation &lt;https://help.autodesk.com/view/DOCS/ENU/?guid=Issues_Types_Categories&gt;`_.Note that by default, this endpoint only retrieves custom attributes that were directly assigned to the issue category or issue type. It does not retrieve inherited custom attributes... include:: ../../../../_snippets/not-backward-compatible.rst
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class IssueAttributeMappingsRequestBuilderGetQueryParameters 
        {
            /// <summary>Retrieves issue custom attribute mappings associated with the specified issue custom attribute definitions. Separate multiple values with commas. For example: ``filter[attributeDefinitionId]=18ee5858-cbf1-451a-a525-7c6ff8156775``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BattributeDefinitionId%5D")]
            public string? FilterattributeDefinitionId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BattributeDefinitionId%5D")]
            public string FilterattributeDefinitionId { get; set; }
#endif
            /// <summary>Retrieves items that were created at the specified date and time, in one of the following URL-encoded formats: YYYY-MM-DDThh:mm:ss.sz or YYYY-MM-DD. Separate multiple values with commas. We support the following filtering options:- Date range: e.g., ``2022-03-02..2022-03-03`` or ``2022-02-28T22:00:00.000Z..2022-03-28T22:00:00.000Z``- Specific day: e.g., ``2022-03-02`` or ``2022-02-28T22:00:00.000Z``- Specific start date: e.g.,  ``2022-03-02..`` or ``2022-02-28T22:00:00.000Z..``- Specific end date: e.g., ``..2022-03-02`` or ``..2022-02-28T22:00:00.000Z``For more details, see `JSON API Filtering &lt;http://jsonapi.org/format/#fetching-filtering&gt;`_.</summary>
            [QueryParameter("filter%5BcreatedAt%5D")]
            public DateTimeOffset? FiltercreatedAt { get; set; }
            /// <summary>Retrieves types that were deleted at the specified date and time, in one of the following URL-encoded formats: YYYY-MM-DDThh:mm:ss.sz or YYYY-MM-DD. Separate multiple values with commas. We support the following filtering options:- Date range: e.g., ``2022-03-02..2022-03-03`` or ``2022-02-28T22:00:00.000Z..2022-03-28T22:00:00.000Z``- Specific day: e.g., ``2022-03-02`` or ``2022-02-28T22:00:00.000Z``- Specific start date: e.g.,  ``2022-03-02..`` or ``2022-02-28T22:00:00.000Z..``- Specific end date: e.g., ``..2022-03-02`` or ``..2022-02-28T22:00:00.000Z``To include non-deleted items in the response, add ``null`` to the filter: ``filter[deletedAt]=null,YYYY-MM-DDThh:mm:ss.sz...YYYY-MM-DDThh:mm:ss.sz``.For more details, see `JSON API Filtering &lt;http://jsonapi.org/format/#fetching-filtering&gt;`_.</summary>
            [QueryParameter("filter%5BdeletedAt%5D")]
            public DateTimeOffset? FilterdeletedAt { get; set; }
            /// <summary>Retrieves issue custom attribute mappings associated with the specified items (project, type, or subtype). Separate multiple values with commas. For example: ``filter[mappedItemId]=18ee5858-cbf1-451a-a525-7c6ff8156775``. Note that this does not retrieve inherited custom attribute mappings or custom attribute mappings of descendants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BmappedItemId%5D")]
            public string? FiltermappedItemId { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BmappedItemId%5D")]
            public string FiltermappedItemId { get; set; }
#endif
            /// <summary>Retrieves items that were last updated at the specified date and time, in one of the following URL-encoded formats: YYYY-MM-DDThh:mm:ss.sz or YYYY-MM-DD. Separate multiple values with commas. We support the following filtering options:- Date range: e.g., ``2022-03-02..2022-03-03`` or ``2022-02-28T22:00:00.000Z..2022-03-28T22:00:00.000Z``- Specific day: e.g., ``2022-03-02`` or ``2022-02-28T22:00:00.000Z``- Specific start date: e.g.,  ``2022-03-02..`` or ``2022-02-28T22:00:00.000Z..``- Specific end date: e.g., ``..2022-03-02`` or ``..2022-02-28T22:00:00.000Z``For more details, see `JSON API Filtering &lt;http://jsonapi.org/format/#fetching-filtering&gt;`_.</summary>
            [QueryParameter("filter%5BupdatedAt%5D")]
            public DateTimeOffset? FilterupdatedAt { get; set; }
            /// <summary>The number of custom attribute mappings to return in the response payload.  For example, ``limit=2``. Acceptable values: ``1-200``. Default value: ``200``.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The number of custom attribute mappings you want to begin retrieving results from.</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class IssueAttributeMappingsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.Issues.Projects.Item.IssueAttributeMappings.IssueAttributeMappingsRequestBuilder.IssueAttributeMappingsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
