// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.Issues.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IssueAttributeMappingDefinition : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The ID of the custom attribute definition.</summary>
        public Guid? AttributeDefinitionId { get; set; }
        /// <summary>The containerId property</summary>
        public Guid? ContainerId { get; private set; }
        /// <summary>The date and time the custom attribute mapping was created, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>The Autodesk ID of the user who created the custom attribute mapping.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; private set; }
#nullable restore
#else
        public string CreatedBy { get; private set; }
#endif
        /// <summary>The date and time the custom attribute mapping was deleted, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? DeletedAt { get; private set; }
        /// <summary>The Autodesk ID of the user who deleted the custom attribute mapping.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeletedBy { get; private set; }
#nullable restore
#else
        public string DeletedBy { get; private set; }
#endif
        /// <summary>The ID of the custom attribute mapping.</summary>
        public Guid? Id { get; private set; }
        /// <summary>The ID of the item (type, or subtype) the custom attribute is mapped to.</summary>
        public Guid? MappedItemId { get; set; }
        /// <summary>The type of item the custom attribute is mapped to.Possible values:``issueType`` - this corresponds to ``Issue Category`` in the UI.``issueSubtype`` - this corresponds to ``Issue Type`` in the UI.Note that ``issueSubtype``\&apos;s inherit ``issueType``\&apos;s.</summary>
        public global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_mappedItemType? MappedItemType { get; set; }
        /// <summary>The order that the custom attributes were mapped to the item (type, subtype). This is only relevant to non-inherited mappings.</summary>
        public int? Order { get; private set; }
        /// <summary>Not applicable.A list of actions that are permitted for the custom attribute mapping for the current user.Possible Values: ``edit``, ``delete``, ``change_order``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_permittedActions?>? PermittedActions { get; private set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_permittedActions?> PermittedActions { get; private set; }
#endif
        /// <summary>Not applicable.A list of custom attribute mapping attributes that can be modified by the current user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PermittedAttributes { get; private set; }
#nullable restore
#else
        public List<string> PermittedAttributes { get; private set; }
#endif
        /// <summary>The last date and time the custom attribute mapping was updated, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>The Autodesk ID of the user who last updated the custom attribute mapping.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedBy { get; private set; }
#nullable restore
#else
        public string UpdatedBy { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attributeDefinitionId", n => { AttributeDefinitionId = n.GetGuidValue(); } },
                { "containerId", n => { ContainerId = n.GetGuidValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdBy", n => { CreatedBy = n.GetStringValue(); } },
                { "deletedAt", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "deletedBy", n => { DeletedBy = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "mappedItemId", n => { MappedItemId = n.GetGuidValue(); } },
                { "mappedItemType", n => { MappedItemType = n.GetEnumValue<global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_mappedItemType>(); } },
                { "order", n => { Order = n.GetIntValue(); } },
                { "permittedActions", n => { PermittedActions = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_permittedActions>()?.AsList(); } },
                { "permittedAttributes", n => { PermittedAttributes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "updatedBy", n => { UpdatedBy = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("attributeDefinitionId", AttributeDefinitionId);
            writer.WriteGuidValue("mappedItemId", MappedItemId);
            writer.WriteEnumValue<global::Autodesk.ACC.Issues.Models.IssueAttributeMappingDefinition_mappedItemType>("mappedItemType", MappedItemType);
        }
    }
}
#pragma warning restore CS0618
