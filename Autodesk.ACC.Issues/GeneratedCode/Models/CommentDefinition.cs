// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.Issues.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CommentDefinition : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The comment content. A ``\n`` indicates a new line, e.g.: ``Hey\nAharon`` will be a 2 lines comment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Body { get; set; }
#nullable restore
#else
        public string Body { get; set; }
#endif
        /// <summary>The date and time the comment was created by the client, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientCreatedAt { get; private set; }
#nullable restore
#else
        public string ClientCreatedAt { get; private set; }
#endif
        /// <summary>The last date and time the comment was updated by the client, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? ClientUpdatedAt { get; private set; }
        /// <summary>The date and time the comment was created, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>The Autodesk ID of the user who created the comment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; private set; }
#nullable restore
#else
        public string CreatedBy { get; private set; }
#endif
        /// <summary>The date and time the comment was deleted, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? DeletedAt { get; private set; }
        /// <summary>The comment ID.</summary>
        public Guid? Id { get; set; }
        /// <summary>The permittedActions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PermittedActions { get; private set; }
#nullable restore
#else
        public List<string> PermittedActions { get; private set; }
#endif
        /// <summary>The permittedAttributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PermittedAttributes { get; private set; }
#nullable restore
#else
        public List<string> PermittedAttributes { get; private set; }
#endif
        /// <summary>The last date and time the comment was updated, in the following format: YYYY-MM-DDThh:mm:ss.sz.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Models.CommentDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.Issues.Models.CommentDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.Issues.Models.CommentDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "body", n => { Body = n.GetStringValue(); } },
                { "clientCreatedAt", n => { ClientCreatedAt = n.GetStringValue(); } },
                { "clientUpdatedAt", n => { ClientUpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdBy", n => { CreatedBy = n.GetStringValue(); } },
                { "deletedAt", n => { DeletedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "permittedActions", n => { PermittedActions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "permittedAttributes", n => { PermittedAttributes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("body", Body);
            writer.WriteGuidValue("id", Id);
        }
    }
}
#pragma warning restore CS0618
