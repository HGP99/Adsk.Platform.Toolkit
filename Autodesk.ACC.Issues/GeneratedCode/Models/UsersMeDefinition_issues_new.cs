// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.Issues.Models
{
    /// <summary>
    /// If this object appears in the response, it indicates that the user can create and modify issues.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UsersMeDefinition_issues_new : IParsable
    {
        /// <summary>A list of actions you are allowed to do on issues.Possible Values: ``assign_all``, ``assign_same_company``, ``clear_assignee``, ``delete``, ``add_comment``, ``add_attachment``, ``remove_attachment``.``add_attachment``, ``remove_attachment`` are not relevant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_actions?>? Permitted_actions { get; private set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_actions?> Permitted_actions { get; private set; }
#endif
        /// <summary>A list of attributes you are allowed to open a new issue. ``issueTypeId``, ``linkedDocument``, ``links``, ``ownerId``, ``officialResponse``, ``rootCauseId``, ``snapshotUrn`` are not applicable.Possible Values: ``title``, ``description``, ``issueTypeId``, ``issueSubtypeId``, ``status``, ``assignedTo``, ``assignedToType``, ``dueDate``, ``locationId``, ``locationDetails``, ``linkedDocuments``, ``links``, ``ownerId``, ``rootCauseId``, ``officialResponse``, ``customAttributes``, ``snapshotUrn``, ``startDate``, ``published``, ``deleted``, ``watchers``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_attributes?>? Permitted_attributes { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_attributes?> Permitted_attributes { get; set; }
#endif
        /// <summary>A list of statuses you are allowed to open a new issue.Possible Values: ``open``, ``pending``, ``in_review``, ``closed``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_statuses?>? Permitted_statuses { get; private set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_statuses?> Permitted_statuses { get; private set; }
#endif
        /// <summary>The list of actions permitted for the user for this issue in its current state.Possible Values: ``assign_all`` (can assign another user from another company to the issue), ``assign_same_company`` (can only assign another user from the same company to the issue), ``clear_assignee``, ``delete``, ``add_comment``, ``add_attachment``, ``remove_attachment``.The following values are not relevant: ``add_attachment``, ``remove_attachment``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedActions?>? PermittedActions { get; private set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedActions?> PermittedActions { get; private set; }
#endif
        /// <summary>A list of attributes you are allowed to open a new issue. ``issueTypeId``, ``linkedDocument``, ``links``, ``ownerId``, ``officialResponse``, ``rootCauseId``, ``snapshotUrn`` are not applicable.Possible Values: ``title``, ``description``, ``issueTypeId``, ``issueSubtypeId``, ``status``, ``assignedTo``, ``assignedToType``, ``dueDate``, ``locationId``, ``locationDetails``, ``linkedDocuments``, ``links``, ``ownerId``, ``rootCauseId``, ``officialResponse``, ``customAttributes``, ``snapshotUrn``, ``startDate``, ``published``, ``deleted``, ``watchers``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedAttributes?>? PermittedAttributes { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedAttributes?> PermittedAttributes { get; set; }
#endif
        /// <summary>A list of statuses you are allowed to open a new issue.Possible Values: ``open``, ``pending``, ``in_review``, ``closed``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedStatuses?>? PermittedStatuses { get; private set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedStatuses?> PermittedStatuses { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "permittedActions", n => { PermittedActions = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedActions>()?.AsList(); } },
                { "permittedAttributes", n => { PermittedAttributes = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedAttributes>()?.AsList(); } },
                { "permittedStatuses", n => { PermittedStatuses = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedStatuses>()?.AsList(); } },
                { "permitted_actions", n => { Permitted_actions = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_actions>()?.AsList(); } },
                { "permitted_attributes", n => { Permitted_attributes = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_attributes>()?.AsList(); } },
                { "permitted_statuses", n => { Permitted_statuses = n.GetCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_statuses>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permitted_attributes>("permitted_attributes", Permitted_attributes);
            writer.WriteCollectionOfEnumValues<global::Autodesk.ACC.Issues.Models.UsersMeDefinition_issues_new_permittedAttributes>("permittedAttributes", PermittedAttributes);
        }
    }
}
#pragma warning restore CS0618
