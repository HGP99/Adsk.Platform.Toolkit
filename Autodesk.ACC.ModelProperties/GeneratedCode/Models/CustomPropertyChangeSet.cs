// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Autodesk.ACC.ModelProperties.Models {
    public class CustomPropertyChangeSet : IParsable 
    {
        /// <summary>List of stable object ids to change the custom properties for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? Svf2Ids { get; set; }
#nullable restore
#else
        public List<int?> Svf2Ids { get; set; }
#endif
        /// <summary>Map of updated custom propery values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public CustomPropertyChangeSet_values? Values { get; set; }
#nullable restore
#else
        public CustomPropertyChangeSet_values Values { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="CustomPropertyChangeSet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static CustomPropertyChangeSet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new CustomPropertyChangeSet();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"svf2Ids", n => { Svf2Ids = n.GetCollectionOfPrimitiveValues<int?>()?.ToList(); } },
                {"values", n => { Values = n.GetObjectValue<CustomPropertyChangeSet_values>(CustomPropertyChangeSet_values.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<int?>("svf2Ids", Svf2Ids);
            writer.WriteObjectValue<CustomPropertyChangeSet_values>("values", Values);
        }
    }
}
