// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.ModelProperties.Models
{
    /// <summary>
    /// diff manifest
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DiffManifestDef : IParsable
    {
        /// <summary>creation timestampe</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>errors</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.ModelProperties.Models.ResourceError>? Errors { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.ModelProperties.Models.ResourceError> Errors { get; set; }
#endif
        /// <summary>previous seed files</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>? Prev { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef> Prev { get; set; }
#endif
        /// <summary>project ID</summary>
        public Guid? ProjectId { get; set; }
        /// <summary>current schema version</summary>
        public global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef_schema? Schema { get; set; }
        /// <summary>current seed files</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>? SeedFiles { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef> SeedFiles { get; set; }
#endif
        /// <summary>manifest status</summary>
        public global::Autodesk.ACC.ModelProperties.Models.ManifestStatus? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "errors", n => { Errors = n.GetCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ResourceError>(global::Autodesk.ACC.ModelProperties.Models.ResourceError.CreateFromDiscriminatorValue)?.AsList(); } },
                { "prev", n => { Prev = n.GetCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>(global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef.CreateFromDiscriminatorValue)?.AsList(); } },
                { "projectId", n => { ProjectId = n.GetGuidValue(); } },
                { "schema", n => { Schema = n.GetEnumValue<global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef_schema>(); } },
                { "seedFiles", n => { SeedFiles = n.GetCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>(global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef.CreateFromDiscriminatorValue)?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.ACC.ModelProperties.Models.ManifestStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ResourceError>("errors", Errors);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>("prev", Prev);
            writer.WriteGuidValue("projectId", ProjectId);
            writer.WriteEnumValue<global::Autodesk.ACC.ModelProperties.Models.DiffManifestDef_schema>("schema", Schema);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.ModelProperties.Models.ManifestSeedFileDef>("seedFiles", SeedFiles);
            writer.WriteEnumValue<global::Autodesk.ACC.ModelProperties.Models.ManifestStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
