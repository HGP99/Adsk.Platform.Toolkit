// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.FileManagement.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class NamingStandardDefinition_definition : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Delimiter used in the attribute definition.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Delimiter { get; set; }
#nullable restore
#else
        public string Delimiter { get; set; }
#endif
        /// <summary>The fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_fields>? Fields { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_fields> Fields { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_metadata>? Metadata { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_metadata> Metadata { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "delimiter", n => { Delimiter = n.GetStringValue(); } },
                { "fields", n => { Fields = n.GetCollectionOfObjectValues<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_fields>(global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_fields.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetCollectionOfObjectValues<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_metadata>(global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_metadata.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("delimiter", Delimiter);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_fields>("fields", Fields);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.FileManagement.Models.NamingStandardDefinition_definition_metadata>("metadata", Metadata);
        }
    }
}
#pragma warning restore CS0618
