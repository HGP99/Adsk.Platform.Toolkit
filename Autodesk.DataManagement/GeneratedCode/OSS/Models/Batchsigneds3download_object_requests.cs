// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.DataManagement.OSS.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Batchsigneds3download_object_requests : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>If the requested object has not been modified since the time specified in this attribute, the response body will show the status of this item as `skipped` with the reason `Not Modified`, as the client still has the latest version of the data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IfModifiedSince { get; set; }
#nullable restore
#else
        public string IfModifiedSince { get; set; }
#endif
        /// <summary>The value of the ETag of the object. If they match, the response body will show the status of this item as `skipped` with the reason `Not Modified`, as the client already has the data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IfNoneMatch { get; set; }
#nullable restore
#else
        public string IfNoneMatch { get; set; }
#endif
        /// <summary>The key of the object for which to create a download signed URL.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ObjectKey { get; set; }
#nullable restore
#else
        public string ObjectKey { get; set; }
#endif
        /// <summary>The value of the Cache-Control header that the client expects to receive from S3. If this attribute is not provided, it defaults to the value stored for the object itself.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseCacheControl { get; set; }
#nullable restore
#else
        public string ResponseCacheControl { get; set; }
#endif
        /// <summary>The value of the Content-Disposition header the client expects to receive from S3. If this attribute is not provided, it defaults to the value stored for the object itself.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseContentDisposition { get; set; }
#nullable restore
#else
        public string ResponseContentDisposition { get; set; }
#endif
        /// <summary>The value of the Content-Type header the client expects to receive from S3. If this attribute is not provided, it defaults to the value stored for the object itself.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseContentType { get; set; }
#nullable restore
#else
        public string ResponseContentType { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.OSS.Models.Batchsigneds3download_object_requests"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.DataManagement.OSS.Models.Batchsigneds3download_object_requests CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.DataManagement.OSS.Models.Batchsigneds3download_object_requests();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "If-Modified-Since", n => { IfModifiedSince = n.GetStringValue(); } },
                { "If-None-Match", n => { IfNoneMatch = n.GetStringValue(); } },
                { "objectKey", n => { ObjectKey = n.GetStringValue(); } },
                { "response-cache-control", n => { ResponseCacheControl = n.GetStringValue(); } },
                { "response-content-disposition", n => { ResponseContentDisposition = n.GetStringValue(); } },
                { "response-content-type", n => { ResponseContentType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("If-Modified-Since", IfModifiedSince);
            writer.WriteStringValue("If-None-Match", IfNoneMatch);
            writer.WriteStringValue("objectKey", ObjectKey);
            writer.WriteStringValue("response-cache-control", ResponseCacheControl);
            writer.WriteStringValue("response-content-disposition", ResponseContentDisposition);
            writer.WriteStringValue("response-content-type", ResponseContentType);
        }
    }
}
#pragma warning restore CS0618
