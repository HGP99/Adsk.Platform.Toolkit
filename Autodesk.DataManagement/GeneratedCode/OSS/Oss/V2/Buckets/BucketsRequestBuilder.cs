// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.DataManagement.OSS.Models;
using Autodesk.DataManagement.OSS.Oss.V2.Buckets.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.DataManagement.OSS.Oss.V2.Buckets
{
    /// <summary>
    /// Builds and executes requests for operations under \oss\v2\buckets
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BucketsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Autodesk.DataManagement.OSS.oss.v2.buckets.item collection</summary>
        /// <param name="position">URL-encoded bucket key</param>
        /// <returns>A <see cref="global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.Item.WithBucketKeyItemRequestBuilder"/></returns>
        public global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.Item.WithBucketKeyItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("bucketKey", position);
                return new global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.Item.WithBucketKeyItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BucketsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oss/v2/buckets{?limit*,region*,startAt*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BucketsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oss/v2/buckets{?limit*,region*,startAt*}", rawUrl)
        {
        }
        /// <summary>
        /// This endpoint will return the buckets owned by the application. This endpoint supports pagination.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.OSS.Models.Buckets"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.DataManagement.OSS.Models.Buckets?> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.DataManagement.OSS.Models.Buckets> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Autodesk.DataManagement.OSS.Models.Buckets>(requestInfo, global::Autodesk.DataManagement.OSS.Models.Buckets.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Use this endpoint to create a bucket. Buckets are arbitrary spaces created and owned by applications. Bucket keys are globally unique across all regions, regardless of where they were created, and they cannot be changed. The application creating the bucket is the owner of the bucket.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.OSS.Models.Bucket"/></returns>
        /// <param name="body">Bucket Payload Body Structure</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.DataManagement.OSS.Models.Reason">When receiving a 409 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.DataManagement.OSS.Models.Bucket?> PostAsync(global::Autodesk.DataManagement.OSS.Models.Create_buckets_payload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.DataManagement.OSS.Models.Bucket> PostAsync(global::Autodesk.DataManagement.OSS.Models.Create_buckets_payload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "409", global::Autodesk.DataManagement.OSS.Models.Reason.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.DataManagement.OSS.Models.Bucket>(requestInfo, global::Autodesk.DataManagement.OSS.Models.Bucket.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// This endpoint will return the buckets owned by the application. This endpoint supports pagination.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, application/vnd.api+json");
            return requestInfo;
        }
        /// <summary>
        /// Use this endpoint to create a bucket. Buckets are arbitrary spaces created and owned by applications. Bucket keys are globally unique across all regions, regardless of where they were created, and they cannot be changed. The application creating the bucket is the owner of the bucket.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Bucket Payload Body Structure</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Autodesk.DataManagement.OSS.Models.Create_buckets_payload body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Autodesk.DataManagement.OSS.Models.Create_buckets_payload body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, application/vnd.api+json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// This endpoint will return the buckets owned by the application. This endpoint supports pagination.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class BucketsRequestBuilderGetQueryParameters 
        {
            /// <summary>Limit to the response size,Acceptable values: 1-100 Default = 10</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>The region where the bucket residesAcceptable values: `US`, `EMEA`Default is `US`</summary>
            [Obsolete("This property is deprecated, use RegionAsGetRegionQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("region")]
            public string? Region { get; set; }
#nullable restore
#else
            [QueryParameter("region")]
            public string Region { get; set; }
#endif
            /// <summary>The region where the bucket residesAcceptable values: `US`, `EMEA`Default is `US`</summary>
            [QueryParameter("region")]
            public global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.GetRegionQueryParameterType? RegionAsGetRegionQueryParameterType { get; set; }
            /// <summary>Key to use as an offset to continue pagination This is typically the last bucket key found in a preceding GET buckets response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("startAt")]
            public string? StartAt { get; set; }
#nullable restore
#else
            [QueryParameter("startAt")]
            public string StartAt { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class BucketsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.DataManagement.OSS.Oss.V2.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class BucketsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
