// <auto-generated/>
using Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Parent;
using Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Refs;
using Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships;
using Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Tip;
using Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Versions;
using Autodesk.DataManagement.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \data\v1\projects\{project_id}\items\{item_id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class WithItem_ItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The parent property</summary>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Parent.ParentRequestBuilder Parent
        {
            get => new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Parent.ParentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refs property</summary>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Refs.RefsRequestBuilder Refs
        {
            get => new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Refs.RefsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The relationships property</summary>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.RelationshipsRequestBuilder Relationships
        {
            get => new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.RelationshipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tip property</summary>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Tip.TipRequestBuilder Tip
        {
            get => new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Tip.TipRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The versions property</summary>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Versions.VersionsRequestBuilder Versions
        {
            get => new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Versions.VersionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithItem_ItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data/v1/projects/{project_id}/items/{item_id}{?includePathInProject*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithItem_ItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data/v1/projects/{project_id}/items/{item_id}{?includePathInProject*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves metadata for a specified item. Items represent word documents, fusion design files, drawings, spreadsheets, etc.Notes:The tip version for the item is included in the included array of the payload.To retrieve metadata for multiple items, see the ListItems command.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.Models.Item"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item404Error">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.DataManagement.Models.Item?> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder.WithItem_ItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.DataManagement.Models.Item> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder.WithItem_ItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.DataManagement.Models.Item400Error.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.DataManagement.Models.Item403Error.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.DataManagement.Models.Item404Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.DataManagement.Models.Item>(requestInfo, global::Autodesk.DataManagement.Models.Item.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the properties of the given item_id object.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.Models.Item"/></returns>
        /// <param name="body">Describe the item to be patched.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item404Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Item423Error">When receiving a 423 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.DataManagement.Models.Item?> PatchAsync(global::Autodesk.DataManagement.Models.ItemRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.DataManagement.Models.Item> PatchAsync(global::Autodesk.DataManagement.Models.ItemRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.DataManagement.Models.Item400Error.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.DataManagement.Models.Item403Error.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.DataManagement.Models.Item404Error.CreateFromDiscriminatorValue },
                { "423", global::Autodesk.DataManagement.Models.Item423Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.DataManagement.Models.Item>(requestInfo, global::Autodesk.DataManagement.Models.Item.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves metadata for a specified item. Items represent word documents, fusion design files, drawings, spreadsheets, etc.Notes:The tip version for the item is included in the included array of the payload.To retrieve metadata for multiple items, see the ListItems command.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder.WithItem_ItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder.WithItem_ItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Updates the properties of the given item_id object.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Describe the item to be patched.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Autodesk.DataManagement.Models.ItemRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Autodesk.DataManagement.Models.ItemRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/vnd.api+json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves metadata for a specified item. Items represent word documents, fusion design files, drawings, spreadsheets, etc.Notes:The tip version for the item is included in the included array of the payload.To retrieve metadata for multiple items, see the ListItems command.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class WithItem_ItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Specify whether to return pathInProject attribute in response for BIM 360 Docs projects. pathInProject is the relative path of the item starting from project’s root folder. true: response will include pathInProject attribute for BIM 360 Docs projects.  false (default): response will not include pathInProject attribute for BIM 360 Docs projects.</summary>
            [QueryParameter("includePathInProject")]
            public bool? IncludePathInProject { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class WithItem_ItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.WithItem_ItemRequestBuilder.WithItem_ItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        public partial class WithItem_ItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
