// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.DataManagement.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs
{
    /// <summary>
    /// Builds and executes requests for operations under \data\v1\projects\{project_id}\items\{item_id}\relationships\refs
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RefsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RefsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data/v1/projects/{project_id}/items/{item_id}/relationships/refs{?filter%5Bdirection%5D*,filter%5Bextension%2Etype%5D*,filter%5Bid%5D*,filter%5BrefType%5D*,filter%5Btype%5D*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RefsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/data/v1/projects/{project_id}/items/{item_id}/relationships/refs{?filter%5Bdirection%5D*,filter%5Bextension%2Etype%5D*,filter%5Bid%5D*,filter%5BrefType%5D*,filter%5Btype%5D*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns the custom relationships that are associated with the given item_id. Custom relationships can be established between an item and other resources within the data domain service (folders, items, and versions).Notes:Each relationship is defined by the id of the object at the other end of the relationship, together with type, specific reference meta including extension data.Callers will typically use a filter parameter to restrict the response to the custom relationship types (filter[meta.refType]) they are interested in.The response body will have an included array which contains the resources that are involved in the relationship, which is essentially the GET projects/:project_id/items/:item_id/refs endpoint.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.Models.RelationshipRefs"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.DataManagement.Models.RelationshipRefs400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.RelationshipRefs403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.RelationshipRefs404Error">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.DataManagement.Models.RelationshipRefs?> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder.RefsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.DataManagement.Models.RelationshipRefs> GetAsync(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder.RefsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.DataManagement.Models.RelationshipRefs400Error.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.DataManagement.Models.RelationshipRefs403Error.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.DataManagement.Models.RelationshipRefs404Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.DataManagement.Models.RelationshipRefs>(requestInfo, global::Autodesk.DataManagement.Models.RelationshipRefs.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a custom relationship between an item and another resource within the data domain service (folder, item, or version)
        /// </summary>
        /// <param name="body">Describe the ref to be created.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.DataManagement.Models.Refs400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Refs403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.DataManagement.Models.Refs404Error">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task PostAsync(global::Autodesk.DataManagement.Models.RelationshipRefsRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task PostAsync(global::Autodesk.DataManagement.Models.RelationshipRefsRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.DataManagement.Models.Refs400Error.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.DataManagement.Models.Refs403Error.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.DataManagement.Models.Refs404Error.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the custom relationships that are associated with the given item_id. Custom relationships can be established between an item and other resources within the data domain service (folders, items, and versions).Notes:Each relationship is defined by the id of the object at the other end of the relationship, together with type, specific reference meta including extension data.Callers will typically use a filter parameter to restrict the response to the custom relationship types (filter[meta.refType]) they are interested in.The response body will have an included array which contains the resources that are involved in the relationship, which is essentially the GET projects/:project_id/items/:item_id/refs endpoint.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder.RefsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder.RefsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates a custom relationship between an item and another resource within the data domain service (folder, item, or version)
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Describe the ref to be created.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Autodesk.DataManagement.Models.RelationshipRefsRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Autodesk.DataManagement.Models.RelationshipRefsRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/vnd.api+json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns the custom relationships that are associated with the given item_id. Custom relationships can be established between an item and other resources within the data domain service (folders, items, and versions).Notes:Each relationship is defined by the id of the object at the other end of the relationship, together with type, specific reference meta including extension data.Callers will typically use a filter parameter to restrict the response to the custom relationship types (filter[meta.refType]) they are interested in.The response body will have an included array which contains the resources that are involved in the relationship, which is essentially the GET projects/:project_id/items/:item_id/refs endpoint.New! Autodesk Construction Cloud platform (ACC). Note that this endpoint is compatible with ACC projects. For more information about the Autodesk Construction Cloud APIs, see the Autodesk Construction Cloud documentation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RefsRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter by the direction of the reference. Possible values: from, to</summary>
            [Obsolete("This property is deprecated, use FilterdirectionAsGetFilterDirectionQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bdirection%5D")]
            public string? Filterdirection { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bdirection%5D")]
            public string Filterdirection { get; set; }
#endif
            /// <summary>Filter by the direction of the reference. Possible values: from, to</summary>
            [QueryParameter("filter%5Bdirection%5D")]
            public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.GetFilterDirectionQueryParameterType? FilterdirectionAsGetFilterDirectionQueryParameterType { get; set; }
            /// <summary>Filter by the extension type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bextension%2Etype%5D")]
            public string[]? FilterextensionType { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bextension%2Etype%5D")]
            public string[] FilterextensionType { get; set; }
#endif
            /// <summary>Filter by the id of the ref target.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Bid%5D")]
            public string[]? Filterid { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Bid%5D")]
            public string[] Filterid { get; set; }
#endif
            /// <summary>Filter by refType. Possible values: derived, dependencies, auxiliary, xrefs, includes</summary>
            [Obsolete("This property is deprecated, use FilterrefTypeAsGetFilterRefTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BrefType%5D")]
            public string? FilterrefType { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BrefType%5D")]
            public string FilterrefType { get; set; }
#endif
            /// <summary>Filter by refType. Possible values: derived, dependencies, auxiliary, xrefs, includes</summary>
            [QueryParameter("filter%5BrefType%5D")]
            public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.GetFilterRefTypeQueryParameterType? FilterrefTypeAsGetFilterRefTypeQueryParameterType { get; set; }
            /// <summary>Filter by the type of the ref target. Supported values include folders, items, and versions</summary>
            [Obsolete("This property is deprecated, use FiltertypeAsGetFilterTypeQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Btype%5D")]
            public string[]? Filtertype { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Btype%5D")]
            public string[] Filtertype { get; set; }
#endif
            /// <summary>Filter by the type of the ref target. Supported values include folders, items, and versions</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5Btype%5D")]
            public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.GetFilterTypeQueryParameterType[]? FiltertypeAsGetFilterTypeQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5Btype%5D")]
            public global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.GetFilterTypeQueryParameterType[] FiltertypeAsGetFilterTypeQueryParameterType { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RefsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.DataManagement.Data.V1.Projects.Item.Items.Item.Relationships.Refs.RefsRequestBuilder.RefsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class RefsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
