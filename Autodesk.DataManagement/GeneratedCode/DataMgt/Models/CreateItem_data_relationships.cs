// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Autodesk.DataManagement.Models {
    public class CreateItem_data_relationships : IParsable 
    {
        /// <summary>The parent property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public CreateItem_data_relationships_parent? Parent { get; set; }
#nullable restore
#else
        public CreateItem_data_relationships_parent Parent { get; set; }
#endif
        /// <summary>The tip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public CreateItem_data_relationships_tip? Tip { get; set; }
#nullable restore
#else
        public CreateItem_data_relationships_tip Tip { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="CreateItem_data_relationships"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static CreateItem_data_relationships CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new CreateItem_data_relationships();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"parent", n => { Parent = n.GetObjectValue<CreateItem_data_relationships_parent>(CreateItem_data_relationships_parent.CreateFromDiscriminatorValue); } },
                {"tip", n => { Tip = n.GetObjectValue<CreateItem_data_relationships_tip>(CreateItem_data_relationships_tip.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<CreateItem_data_relationships_parent>("parent", Parent);
            writer.WriteObjectValue<CreateItem_data_relationships_tip>("tip", Tip);
        }
    }
}
