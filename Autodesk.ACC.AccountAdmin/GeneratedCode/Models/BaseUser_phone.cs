// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Models
{
    /// <summary>
    /// The phone number of the user. This data will sync from the user&apos;s Autodesk profile.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BaseUser_phone : IParsable
    {
        /// <summary>User&apos;s phone extension.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Extension { get; set; }
#nullable restore
#else
        public string Extension { get; set; }
#endif
        /// <summary>User&apos;s phone number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>User&apos;s phone type. Can be `home`, `mobile` or `office`.  Defaults to `mobile`.</summary>
        public global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone_phoneType? PhoneType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone"/> and sets the default values.
        /// </summary>
        public BaseUser_phone()
        {
            PhoneType = global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone_phoneType.Mobile;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "extension", n => { Extension = n.GetStringValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "phoneType", n => { PhoneType = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone_phoneType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("extension", Extension);
            writer.WriteStringValue("number", Number);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Models.BaseUser_phone_phoneType>("phoneType", PhoneType);
        }
    }
}
#pragma warning restore CS0618
