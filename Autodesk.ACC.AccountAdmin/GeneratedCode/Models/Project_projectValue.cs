// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Autodesk.ACC.AccountAdmin.Models {
    /// <summary>
    /// The value of this project.  When updating the project value both the `value` and `currency` are required.
    /// </summary>
    public class Project_projectValue : IParsable {
        /// <summary>The currency of the project value for this project.  Defaults to USD.</summary>
        public Project_projectValue_currency? Currency { get; set; }
        /// <summary>The estimated value or cost of this project based on the currency specified in the currency field.  Default value is 0.</summary>
        public float? Value { get; set; }
        /// <summary>
        /// Instantiates a new project_projectValue and sets the default values.
        /// </summary>
        public Project_projectValue() {
            Currency = Project_projectValue_currency.USD;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Project_projectValue CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Project_projectValue();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"currency", n => { Currency = n.GetEnumValue<Project_projectValue_currency>(); } },
                {"value", n => { Value = n.GetFloatValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<Project_projectValue_currency>("currency", Currency);
            writer.WriteFloatValue("value", Value);
        }
    }
}
