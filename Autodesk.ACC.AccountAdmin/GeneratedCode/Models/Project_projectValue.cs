// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Models
{
    /// <summary>
    /// The value of this project.  When updating the project value both the `value` and `currency` are required.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Project_projectValue : IParsable
    {
        /// <summary>The currency of the project value for this project.  Defaults to USD.</summary>
        public global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue_currency? Currency { get; set; }
        /// <summary>The estimated value or cost of this project based on the currency specified in the currency field.  Default value is 0.</summary>
        public float? Value { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue"/> and sets the default values.
        /// </summary>
        public Project_projectValue()
        {
            Currency = global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue_currency.USD;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "currency", n => { Currency = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue_currency>(); } },
                { "value", n => { Value = n.GetFloatValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Models.Project_projectValue_currency>("currency", Currency);
            writer.WriteFloatValue("value", Value);
        }
    }
}
#pragma warning restore CS0618
