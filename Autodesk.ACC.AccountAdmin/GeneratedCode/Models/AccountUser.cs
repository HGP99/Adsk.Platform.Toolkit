// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.AccountAdmin.Models
{
    /// <summary>
    /// Account user information.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AccountUser : IParsable
    {
        /// <summary>A short bio about the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AboutMe { get; private set; }
#nullable restore
#else
        public string AboutMe { get; private set; }
#endif
        /// <summary>The accessLevels property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ACC.AccountAdmin.Models.AccountUserAccessLevels? AccessLevels { get; set; }
#nullable restore
#else
        public global::Autodesk.ACC.AccountAdmin.Models.AccountUserAccessLevels AccessLevels { get; set; }
#endif
        /// <summary>The address line 1 of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; private set; }
#nullable restore
#else
        public string AddressLine1 { get; private set; }
#endif
        /// <summary>The address line 2 of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; private set; }
#nullable restore
#else
        public string AddressLine2 { get; private set; }
#endif
        /// <summary>The identifier of the user to be used for analytics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AnalyticsId { get; private set; }
#nullable restore
#else
        public string AnalyticsId { get; private set; }
#endif
        /// <summary>The identifier of the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutodeskId { get; private set; }
#nullable restore
#else
        public string AutodeskId { get; private set; }
#endif
        /// <summary>The city of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; private set; }
#nullable restore
#else
        public string City { get; private set; }
#endif
        /// <summary>The country of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; private set; }
#nullable restore
#else
        public string Country { get; private set; }
#endif
        /// <summary>The timestamp when the user was added.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>When adding the user to a project this is the id of the company they will be representing by default in that project.  The company can still be changed on a project by project basis</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? DefaultCompanyId { get; set; }
#nullable restore
#else
        public UntypedNode DefaultCompanyId { get; set; }
#endif
        /// <summary>When adding the user to a project this is the id of the role within the project they will be in by default.  The role can still be changed on a project by project basis</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? DefaultRoleId { get; set; }
#nullable restore
#else
        public UntypedNode DefaultRoleId { get; set; }
#endif
        /// <summary>The email of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The user&apos;s first name.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The internal identifier of the user.</summary>
        public Guid? Id { get; private set; }
        /// <summary>The url of the user&apos;s avatar.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; private set; }
#nullable restore
#else
        public string ImageUrl { get; private set; }
#endif
        /// <summary>The industry the user works in.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Industry { get; private set; }
#nullable restore
#else
        public string Industry { get; private set; }
#endif
        /// <summary>The job title of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobTitle { get; private set; }
#nullable restore
#else
        public string JobTitle { get; private set; }
#endif
        /// <summary>The user&apos;s last name.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The last time the user signed in.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? LastSignIn { get; private set; }
#nullable restore
#else
        public UntypedNode LastSignIn { get; private set; }
#endif
        /// <summary>The name of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The phone number of the user. This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ACC.AccountAdmin.Models.AccountUser_phone? Phone { get; private set; }
#nullable restore
#else
        public global::Autodesk.ACC.AccountAdmin.Models.AccountUser_phone Phone { get; private set; }
#endif
        /// <summary>The zip or postal code of the user.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; private set; }
#nullable restore
#else
        public string PostalCode { get; private set; }
#endif
        /// <summary>The state or province of the user.  Accepted values here will change depending on which country is provided.  This data will sync from the user&apos;s Autodesk profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateOrProvince { get; private set; }
#nullable restore
#else
        public string StateOrProvince { get; private set; }
#endif
        /// <summary>The status of this account user.  Valid values are `active`, `not_invited`, `pending`, `disabled`, and `deleted`.</summary>
        public global::Autodesk.ACC.AccountAdmin.Models.AccountUser_status? Status { get; set; }
        /// <summary>The timestamp when the user was last updated.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.AccountAdmin.Models.AccountUser"/> and sets the default values.
        /// </summary>
        public AccountUser()
        {
            Status = global::Autodesk.ACC.AccountAdmin.Models.AccountUser_status.Active;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.AccountAdmin.Models.AccountUser"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.AccountAdmin.Models.AccountUser CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.AccountAdmin.Models.AccountUser();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aboutMe", n => { AboutMe = n.GetStringValue(); } },
                { "accessLevels", n => { AccessLevels = n.GetObjectValue<global::Autodesk.ACC.AccountAdmin.Models.AccountUserAccessLevels>(global::Autodesk.ACC.AccountAdmin.Models.AccountUserAccessLevels.CreateFromDiscriminatorValue); } },
                { "addressLine1", n => { AddressLine1 = n.GetStringValue(); } },
                { "addressLine2", n => { AddressLine2 = n.GetStringValue(); } },
                { "analyticsId", n => { AnalyticsId = n.GetStringValue(); } },
                { "autodeskId", n => { AutodeskId = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "defaultCompanyId", n => { DefaultCompanyId = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "defaultRoleId", n => { DefaultRoleId = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "industry", n => { Industry = n.GetStringValue(); } },
                { "jobTitle", n => { JobTitle = n.GetStringValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "lastSignIn", n => { LastSignIn = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetObjectValue<global::Autodesk.ACC.AccountAdmin.Models.AccountUser_phone>(global::Autodesk.ACC.AccountAdmin.Models.AccountUser_phone.CreateFromDiscriminatorValue); } },
                { "postalCode", n => { PostalCode = n.GetStringValue(); } },
                { "stateOrProvince", n => { StateOrProvince = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.ACC.AccountAdmin.Models.AccountUser_status>(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Autodesk.ACC.AccountAdmin.Models.AccountUserAccessLevels>("accessLevels", AccessLevels);
            writer.WriteObjectValue<UntypedNode>("defaultCompanyId", DefaultCompanyId);
            writer.WriteObjectValue<UntypedNode>("defaultRoleId", DefaultRoleId);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteEnumValue<global::Autodesk.ACC.AccountAdmin.Models.AccountUser_status>("status", Status);
        }
    }
}
#pragma warning restore CS0618
