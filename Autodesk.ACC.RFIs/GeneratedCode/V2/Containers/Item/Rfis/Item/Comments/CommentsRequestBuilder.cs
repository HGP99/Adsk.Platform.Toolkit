// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ACC.RFIs.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\containers\{containerId}\rfis\{rfiId}\comments
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CommentsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CommentsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/containers/{containerId}/rfis/{rfiId}/comments{?fields,filter%5BcreatedAt%5D*,filter%5BcreatedBy%5D,limit*,offset*,sort}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CommentsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/containers/{containerId}/rfis/{rfiId}/comments{?fields,filter%5BcreatedAt%5D*,filter%5BcreatedBy%5D,limit*,offset*,sort}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves all the comments associated with an RFI... include:: ../../../../_snippets/forward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.RFIs.Models.CommentsList"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.RFIs.Models.ErrorResponse">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ACC.RFIs.Models.ErrorResponse">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.RFIs.Models.CommentsList?> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder.CommentsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.RFIs.Models.CommentsList> GetAsync(Action<RequestConfiguration<global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder.CommentsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.RFIs.Models.ErrorResponse.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ACC.RFIs.Models.ErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.RFIs.Models.CommentsList>(requestInfo, global::Autodesk.ACC.RFIs.Models.CommentsList.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Adds a comment to an RFI... include:: ../../../../_snippets/forward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.RFIs.Models.Comment"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ACC.RFIs.Models.ErrorResponse">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Autodesk.ACC.RFIs.Models.Comment?> PostAsync(global::Autodesk.ACC.RFIs.Models.CreateCommentRequestDefinition body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Autodesk.ACC.RFIs.Models.Comment> PostAsync(global::Autodesk.ACC.RFIs.Models.CreateCommentRequestDefinition body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ACC.RFIs.Models.ErrorResponse.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Autodesk.ACC.RFIs.Models.Comment>(requestInfo, global::Autodesk.ACC.RFIs.Models.Comment.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves all the comments associated with an RFI... include:: ../../../../_snippets/forward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder.CommentsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder.CommentsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Adds a comment to an RFI... include:: ../../../../_snippets/forward-compatible.rst
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.RFIs.Models.CreateCommentRequestDefinition body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Autodesk.ACC.RFIs.Models.CreateCommentRequestDefinition body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves all the comments associated with an RFI... include:: ../../../../_snippets/forward-compatible.rst
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CommentsRequestBuilderGetQueryParameters 
        {
            /// <summary>Specify which attributes you want to see in the response. Separate multiple values with commas. For example, ``fields = title,description``.</summary>
            [Obsolete("This property is deprecated, use FieldsAsGetFieldsQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fields")]
            public string[]? Fields { get; set; }
#nullable restore
#else
            [QueryParameter("fields")]
            public string[] Fields { get; set; }
#endif
            /// <summary>Specify which attributes you want to see in the response. Separate multiple values with commas. For example, ``fields = title,description``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("fields")]
            public global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.GetFieldsQueryParameterType[]? FieldsAsGetFieldsQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("fields")]
            public global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.GetFieldsQueryParameterType[] FieldsAsGetFieldsQueryParameterType { get; set; }
#endif
            /// <summary>Retrieves comments created after the specified date, in the following format: YYYY-MM-DDThh:mm:ss.sz, or a date range in the following format: YYYY-MM-DDThh:mm:ss.sz..YYYY-MM-DDThh:mm:ss.sz.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BcreatedAt%5D")]
            public string? FiltercreatedAt { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BcreatedAt%5D")]
            public string FiltercreatedAt { get; set; }
#endif
            /// <summary>Retrieves comments that were created by the specified user. Use the user&apos;s Autodesk ID. For example, ``filter[createdBy]=PER8KQPK2JRT``. To find the ID call `GET users/me` `BIM 360&lt;/en/docs/bim360/v1/reference/http/rfis-v2-users-me-GET/&gt;`_ `ACC&lt;/en/docs/acc/v1/reference/http/rfis-v2-users-me-GET/&gt;`_ and check ``user.id``.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter%5BcreatedBy%5D")]
            public string[]? FiltercreatedBy { get; set; }
#nullable restore
#else
            [QueryParameter("filter%5BcreatedBy%5D")]
            public string[] FiltercreatedBy { get; set; }
#endif
            /// <summary>The number of RFIs to return in the response payload. Acceptable values: 1-200. Default value: 10. For example, to limit the response to two RFIs per page, use ``limit=2``</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Number of RFIs into the collection that the pagination starts on. For example, to begin the results from the fourth record, use ``offset=3``</summary>
            [QueryParameter("offset")]
            public int? Offset { get; set; }
            /// <summary>The fields to sort the list by</summary>
            [Obsolete("This property is deprecated, use SortAsGetSortQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string[]? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string[] Sort { get; set; }
#endif
            /// <summary>The fields to sort the list by</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.GetSortQueryParameterType[]? SortAsGetSortQueryParameterType { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.GetSortQueryParameterType[] SortAsGetSortQueryParameterType { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CommentsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Autodesk.ACC.RFIs.V2.Containers.Item.Rfis.Item.Comments.CommentsRequestBuilder.CommentsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CommentsRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
