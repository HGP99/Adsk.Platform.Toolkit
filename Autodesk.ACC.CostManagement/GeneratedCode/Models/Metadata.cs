// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.CostManagement.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Metadata : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The calendarConfigurations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.CalendarConfiguration>? CalendarConfigurations { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.CalendarConfiguration> CalendarConfigurations { get; set; }
#endif
        /// <summary>The changeOrders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.FormDefinition>? ChangeOrders { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.FormDefinition> ChangeOrders { get; set; }
#endif
        /// <summary>The customColumns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.CustomColumn>? CustomColumns { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.CustomColumn> CustomColumns { get; set; }
#endif
        /// <summary>The customProperties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.PropertyDefinition>? CustomProperties { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.PropertyDefinition> CustomProperties { get; set; }
#endif
        /// <summary>The defaultValues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.DefaultValue>? DefaultValues { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.DefaultValue> DefaultValues { get; set; }
#endif
        /// <summary>The permissions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.Permission>? Permissions { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.Permission> Permissions { get; set; }
#endif
        /// <summary>The savedViews property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.Filter>? SavedViews { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.Filter> SavedViews { get; set; }
#endif
        /// <summary>The settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ACC.CostManagement.Models.Settings? Settings { get; set; }
#nullable restore
#else
        public global::Autodesk.ACC.CostManagement.Models.Settings Settings { get; set; }
#endif
        /// <summary>The terminologies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.Terminology>? Terminologies { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.Terminology> Terminologies { get; set; }
#endif
        /// <summary>The uoms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.UOM>? Uoms { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.UOM> Uoms { get; set; }
#endif
        /// <summary>The workflowDefinitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.ACC.CostManagement.Models.WorkflowDefinition>? WorkflowDefinitions { get; set; }
#nullable restore
#else
        public List<global::Autodesk.ACC.CostManagement.Models.WorkflowDefinition> WorkflowDefinitions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.CostManagement.Models.Metadata"/> and sets the default values.
        /// </summary>
        public Metadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.CostManagement.Models.Metadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.CostManagement.Models.Metadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.CostManagement.Models.Metadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "calendarConfigurations", n => { CalendarConfigurations = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.CalendarConfiguration>(global::Autodesk.ACC.CostManagement.Models.CalendarConfiguration.CreateFromDiscriminatorValue)?.AsList(); } },
                { "changeOrders", n => { ChangeOrders = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.FormDefinition>(global::Autodesk.ACC.CostManagement.Models.FormDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customColumns", n => { CustomColumns = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.CustomColumn>(global::Autodesk.ACC.CostManagement.Models.CustomColumn.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customProperties", n => { CustomProperties = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.PropertyDefinition>(global::Autodesk.ACC.CostManagement.Models.PropertyDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "defaultValues", n => { DefaultValues = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.DefaultValue>(global::Autodesk.ACC.CostManagement.Models.DefaultValue.CreateFromDiscriminatorValue)?.AsList(); } },
                { "permissions", n => { Permissions = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Permission>(global::Autodesk.ACC.CostManagement.Models.Permission.CreateFromDiscriminatorValue)?.AsList(); } },
                { "savedViews", n => { SavedViews = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Filter>(global::Autodesk.ACC.CostManagement.Models.Filter.CreateFromDiscriminatorValue)?.AsList(); } },
                { "settings", n => { Settings = n.GetObjectValue<global::Autodesk.ACC.CostManagement.Models.Settings>(global::Autodesk.ACC.CostManagement.Models.Settings.CreateFromDiscriminatorValue); } },
                { "terminologies", n => { Terminologies = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Terminology>(global::Autodesk.ACC.CostManagement.Models.Terminology.CreateFromDiscriminatorValue)?.AsList(); } },
                { "uoms", n => { Uoms = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.UOM>(global::Autodesk.ACC.CostManagement.Models.UOM.CreateFromDiscriminatorValue)?.AsList(); } },
                { "workflowDefinitions", n => { WorkflowDefinitions = n.GetCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.WorkflowDefinition>(global::Autodesk.ACC.CostManagement.Models.WorkflowDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.CalendarConfiguration>("calendarConfigurations", CalendarConfigurations);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.FormDefinition>("changeOrders", ChangeOrders);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.CustomColumn>("customColumns", CustomColumns);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.PropertyDefinition>("customProperties", CustomProperties);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.DefaultValue>("defaultValues", DefaultValues);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Permission>("permissions", Permissions);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Filter>("savedViews", SavedViews);
            writer.WriteObjectValue<global::Autodesk.ACC.CostManagement.Models.Settings>("settings", Settings);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.Terminology>("terminologies", Terminologies);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.UOM>("uoms", Uoms);
            writer.WriteCollectionOfObjectValues<global::Autodesk.ACC.CostManagement.Models.WorkflowDefinition>("workflowDefinitions", WorkflowDefinitions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
