// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Autodesk.ACC.CostManagement.Models {
    public class Metadata : IAdditionalDataHolder, IParsable 
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The calendarConfigurations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<CalendarConfiguration>? CalendarConfigurations { get; set; }
#nullable restore
#else
        public List<CalendarConfiguration> CalendarConfigurations { get; set; }
#endif
        /// <summary>The changeOrders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<FormDefinition>? ChangeOrders { get; set; }
#nullable restore
#else
        public List<FormDefinition> ChangeOrders { get; set; }
#endif
        /// <summary>The customColumns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<CustomColumn>? CustomColumns { get; set; }
#nullable restore
#else
        public List<CustomColumn> CustomColumns { get; set; }
#endif
        /// <summary>The customProperties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<PropertyDefinition>? CustomProperties { get; set; }
#nullable restore
#else
        public List<PropertyDefinition> CustomProperties { get; set; }
#endif
        /// <summary>The defaultValues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<DefaultValue>? DefaultValues { get; set; }
#nullable restore
#else
        public List<DefaultValue> DefaultValues { get; set; }
#endif
        /// <summary>The permissions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Permission>? Permissions { get; set; }
#nullable restore
#else
        public List<Permission> Permissions { get; set; }
#endif
        /// <summary>The savedViews property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Filter>? SavedViews { get; set; }
#nullable restore
#else
        public List<Filter> SavedViews { get; set; }
#endif
        /// <summary>The settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Autodesk.ACC.CostManagement.Models.Settings? Settings { get; set; }
#nullable restore
#else
        public Autodesk.ACC.CostManagement.Models.Settings Settings { get; set; }
#endif
        /// <summary>The terminologies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Terminology>? Terminologies { get; set; }
#nullable restore
#else
        public List<Terminology> Terminologies { get; set; }
#endif
        /// <summary>The uoms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UOM>? Uoms { get; set; }
#nullable restore
#else
        public List<UOM> Uoms { get; set; }
#endif
        /// <summary>The workflowDefinitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<WorkflowDefinition>? WorkflowDefinitions { get; set; }
#nullable restore
#else
        public List<WorkflowDefinition> WorkflowDefinitions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Metadata"/> and sets the default values.
        /// </summary>
        public Metadata()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Metadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Metadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Metadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"calendarConfigurations", n => { CalendarConfigurations = n.GetCollectionOfObjectValues<CalendarConfiguration>(CalendarConfiguration.CreateFromDiscriminatorValue)?.ToList(); } },
                {"changeOrders", n => { ChangeOrders = n.GetCollectionOfObjectValues<FormDefinition>(FormDefinition.CreateFromDiscriminatorValue)?.ToList(); } },
                {"customColumns", n => { CustomColumns = n.GetCollectionOfObjectValues<CustomColumn>(CustomColumn.CreateFromDiscriminatorValue)?.ToList(); } },
                {"customProperties", n => { CustomProperties = n.GetCollectionOfObjectValues<PropertyDefinition>(PropertyDefinition.CreateFromDiscriminatorValue)?.ToList(); } },
                {"defaultValues", n => { DefaultValues = n.GetCollectionOfObjectValues<DefaultValue>(DefaultValue.CreateFromDiscriminatorValue)?.ToList(); } },
                {"permissions", n => { Permissions = n.GetCollectionOfObjectValues<Permission>(Permission.CreateFromDiscriminatorValue)?.ToList(); } },
                {"savedViews", n => { SavedViews = n.GetCollectionOfObjectValues<Filter>(Filter.CreateFromDiscriminatorValue)?.ToList(); } },
                {"settings", n => { Settings = n.GetObjectValue<Autodesk.ACC.CostManagement.Models.Settings>(Autodesk.ACC.CostManagement.Models.Settings.CreateFromDiscriminatorValue); } },
                {"terminologies", n => { Terminologies = n.GetCollectionOfObjectValues<Terminology>(Terminology.CreateFromDiscriminatorValue)?.ToList(); } },
                {"uoms", n => { Uoms = n.GetCollectionOfObjectValues<UOM>(UOM.CreateFromDiscriminatorValue)?.ToList(); } },
                {"workflowDefinitions", n => { WorkflowDefinitions = n.GetCollectionOfObjectValues<WorkflowDefinition>(WorkflowDefinition.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<CalendarConfiguration>("calendarConfigurations", CalendarConfigurations);
            writer.WriteCollectionOfObjectValues<FormDefinition>("changeOrders", ChangeOrders);
            writer.WriteCollectionOfObjectValues<CustomColumn>("customColumns", CustomColumns);
            writer.WriteCollectionOfObjectValues<PropertyDefinition>("customProperties", CustomProperties);
            writer.WriteCollectionOfObjectValues<DefaultValue>("defaultValues", DefaultValues);
            writer.WriteCollectionOfObjectValues<Permission>("permissions", Permissions);
            writer.WriteCollectionOfObjectValues<Filter>("savedViews", SavedViews);
            writer.WriteObjectValue<Autodesk.ACC.CostManagement.Models.Settings>("settings", Settings);
            writer.WriteCollectionOfObjectValues<Terminology>("terminologies", Terminologies);
            writer.WriteCollectionOfObjectValues<UOM>("uoms", Uoms);
            writer.WriteCollectionOfObjectValues<WorkflowDefinition>("workflowDefinitions", WorkflowDefinitions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
