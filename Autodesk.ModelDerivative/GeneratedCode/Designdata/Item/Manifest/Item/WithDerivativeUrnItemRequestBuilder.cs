// <auto-generated/>
#pragma warning disable CS0618
using Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.Signedcookies;
using Autodesk.ModelDerivative.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Autodesk.ModelDerivative.Designdata.Item.Manifest.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \designdata\{urn}\manifest\{derivativeUrn}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithDerivativeUrnItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The signedcookies property</summary>
        public global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.Signedcookies.SignedcookiesRequestBuilder Signedcookies
        {
            get => new global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.Signedcookies.SignedcookiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.WithDerivativeUrnItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithDerivativeUrnItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/designdata/{urn}/manifest/{derivativeUrn}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.WithDerivativeUrnItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithDerivativeUrnItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/designdata/{urn}/manifest/{derivativeUrn}", rawUrl)
        {
        }
        /// <summary>
        /// Returns information about the specified derivative.This endpoint returns a set of headers similar to that returned by the Get Derivative endpoint.You can use this endpoint to determine the total content length of a derivative before you download it using the Get Derivative endpoint. If the derivative is large, you can choose to download the derivative in chunks, by specifying a chunk size using the Range header parameter.
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Autodesk.ModelDerivative.Models.WithDerivativeUrn400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Autodesk.ModelDerivative.Models.WithDerivativeUrn401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Autodesk.ModelDerivative.Models.WithDerivativeUrn403Error">When receiving a 403 status code</exception>
        /// <exception cref="global::Autodesk.ModelDerivative.Models.WithDerivativeUrn404Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Autodesk.ModelDerivative.Models.WithDerivativeUrn500Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task HeadAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task HeadAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToHeadRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Autodesk.ModelDerivative.Models.WithDerivativeUrn400Error.CreateFromDiscriminatorValue },
                { "401", global::Autodesk.ModelDerivative.Models.WithDerivativeUrn401Error.CreateFromDiscriminatorValue },
                { "403", global::Autodesk.ModelDerivative.Models.WithDerivativeUrn403Error.CreateFromDiscriminatorValue },
                { "404", global::Autodesk.ModelDerivative.Models.WithDerivativeUrn404Error.CreateFromDiscriminatorValue },
                { "500", global::Autodesk.ModelDerivative.Models.WithDerivativeUrn500Error.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns information about the specified derivative.This endpoint returns a set of headers similar to that returned by the Get Derivative endpoint.You can use this endpoint to determine the total content length of a derivative before you download it using the Get Derivative endpoint. If the derivative is large, you can choose to download the derivative in chunks, by specifying a chunk size using the Range header parameter.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToHeadRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToHeadRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.HEAD, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.WithDerivativeUrnItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.WithDerivativeUrnItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Autodesk.ModelDerivative.Designdata.Item.Manifest.Item.WithDerivativeUrnItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithDerivativeUrnItemRequestBuilderHeadRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
