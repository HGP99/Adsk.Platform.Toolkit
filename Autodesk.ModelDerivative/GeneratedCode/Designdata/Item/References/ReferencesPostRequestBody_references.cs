// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ModelDerivative.Designdata.Item.References
{
    /// <summary>
    /// An element of the array.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ReferencesPostRequestBody_references : IParsable
    {
        /// <summary>The reference filename. By default, it is set to “” and the reference will be downloaded with its urn and relativePath.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filename { get; set; }
#nullable restore
#else
        public string Filename { get; set; }
#endif
        /// <summary>Custom metadata with key value pairs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references_metadata Metadata { get; set; }
#endif
        /// <summary>The file path relative to the root design. By default, it is set to “”. It means the reference and its root file are in the same folder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RelativePath { get; set; }
#nullable restore
#else
        public string RelativePath { get; set; }
#endif
        /// <summary>The reference urn.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Urn { get; set; }
#nullable restore
#else
        public string Urn { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "filename", n => { Filename = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references_metadata>(global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references_metadata.CreateFromDiscriminatorValue); } },
                { "relativePath", n => { RelativePath = n.GetStringValue(); } },
                { "urn", n => { Urn = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("filename", Filename);
            writer.WriteObjectValue<global::Autodesk.ModelDerivative.Designdata.Item.References.ReferencesPostRequestBody_references_metadata>("metadata", Metadata);
            writer.WriteStringValue("relativePath", RelativePath);
            writer.WriteStringValue("urn", Urn);
        }
    }
}
#pragma warning restore CS0618
