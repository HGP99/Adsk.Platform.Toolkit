// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ModelDerivative.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    #pragma warning disable CS1591
    public partial class Job : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>list of the requested outputs</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ModelDerivative.Models.Job_acceptedJobs? AcceptedJobs { get; set; }
#nullable restore
#else
        public global::Autodesk.ModelDerivative.Models.Job_acceptedJobs AcceptedJobs { get; set; }
#endif
        /// <summary>reporting success status</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Result { get; set; }
#nullable restore
#else
        public string Result { get; set; }
#endif
        /// <summary>the urn identifier of the source file</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Urn { get; set; }
#nullable restore
#else
        public string Urn { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ModelDerivative.Models.Job"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ModelDerivative.Models.Job CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ModelDerivative.Models.Job();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acceptedJobs", n => { AcceptedJobs = n.GetObjectValue<global::Autodesk.ModelDerivative.Models.Job_acceptedJobs>(global::Autodesk.ModelDerivative.Models.Job_acceptedJobs.CreateFromDiscriminatorValue); } },
                { "result", n => { Result = n.GetStringValue(); } },
                { "urn", n => { Urn = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Autodesk.ModelDerivative.Models.Job_acceptedJobs>("acceptedJobs", AcceptedJobs);
            writer.WriteStringValue("result", Result);
            writer.WriteStringValue("urn", Urn);
        }
    }
}
