// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ModelDerivative.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    #pragma warning disable CS1591
    public partial class SpecificPropertiesPayload : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The fields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Fields { get; set; }
#nullable restore
#else
        public List<string> Fields { get; set; }
#endif
        /// <summary>The pagination property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_pagination? Pagination { get; set; }
#nullable restore
#else
        public global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_pagination Pagination { get; set; }
#endif
        /// <summary>The payload property</summary>
        public global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_payload? Payload { get; set; }
        /// <summary>The query property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Query { get; set; }
#nullable restore
#else
        public UntypedNode Query { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "fields", n => { Fields = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "pagination", n => { Pagination = n.GetObjectValue<global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_pagination>(global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_pagination.CreateFromDiscriminatorValue); } },
                { "payload", n => { Payload = n.GetEnumValue<global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_payload>(); } },
                { "query", n => { Query = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("fields", Fields);
            writer.WriteObjectValue<global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_pagination>("pagination", Pagination);
            writer.WriteEnumValue<global::Autodesk.ModelDerivative.Models.SpecificPropertiesPayload_payload>("payload", Payload);
            writer.WriteObjectValue<UntypedNode>("query", Query);
        }
    }
}
